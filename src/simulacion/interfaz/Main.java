/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on 16/09/2009, 12:22:59 PM
 */
package simulacion.interfaz;

import java.awt.Dialog.ModalExclusionType;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.NumberFormat;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.netbeans.api.visual.widget.Widget;
import org.openide.util.Exceptions;
import problema.mochila.EsquemaMochila;
import problema.mochila.HandlerMochila;
import problema.viajero.HandlerViajero;
import problema.viajero.EsquemaViajero;
import problema.viajero.Punto;
import problema.viajero.SolucionViajero;
import simulacion.Configuracion;
import simulacion.interfaz.viajero.TSPFilter;
import simulacion.simulatedAnnealing.EsquemaVecindad;
import simulacion.simulatedAnnealing.OyenteAnnealing;
import simulacion.simulatedAnnealing.SimulatedAnnealing;
import simulacion.simulatedAnnealing.Solucion;

/**
 *
 * @author John Arevalo
 * @author Jenny Bernal
 *
 */
public class Main extends javax.swing.JFrame implements OyenteAnnealing {

    /** Creates new form Main */
    private File archivo;
    private FileWriter registro;
    private EsquemaViajero viajero;
    private EsquemaVecindad esquemaVecindad;
    private SimulatedAnnealing algoritmo;
    private EsquemaMochila mochila;
    private GrafoViajeroScene grafoViajero;
    private Configuracion configuracion;

    public Main() throws IOException {
        grafoViajero = new GrafoViajeroScene();
        initComponents();
        configuracion = new Configuracion();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        barraHerramientas = new javax.swing.JToolBar();
        botonAbrirArchivo = new javax.swing.JButton();
        botonEjecutar = new javax.swing.JButton();
        scrollPanelViajero = new javax.swing.JScrollPane();
        panelViajero = new javax.swing.JPanel();
        barraMenu = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuAbrirViajero = new javax.swing.JMenuItem();
        menuAbrirMochila = new javax.swing.JMenuItem();
        menuSalir = new javax.swing.JMenuItem();
        menuEdicion = new javax.swing.JMenu();
        menuEjecutar = new javax.swing.JMenuItem();
        menuPreferencias = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmos de Simulacion");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        barraHerramientas.setFloatable(false);
        barraHerramientas.setRollover(true);

        botonAbrirArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simulacion/interfaz/imagenes/abrirarchivo.png"))); // NOI18N
        botonAbrirArchivo.setToolTipText("Abrir Archivo...");
        botonAbrirArchivo.setFocusable(false);
        botonAbrirArchivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAbrirArchivo.setMargin(new java.awt.Insets(10, 10, 10, 10));
        botonAbrirArchivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirArchivoActionPerformed(evt);
            }
        });
        barraHerramientas.add(botonAbrirArchivo);

        botonEjecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simulacion/interfaz/imagenes/ejecutar.png"))); // NOI18N
        botonEjecutar.setToolTipText("Ejecutar");
        botonEjecutar.setFocusable(false);
        botonEjecutar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonEjecutar.setMargin(new java.awt.Insets(10, 10, 10, 10));
        botonEjecutar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });
        barraHerramientas.add(botonEjecutar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(barraHerramientas, gridBagConstraints);

        panelViajero.setLayout(new java.awt.BorderLayout());
        scrollPanelViajero.setViewportView(panelViajero);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(scrollPanelViajero, gridBagConstraints);

        menuArchivo.setText("Archivo");

        menuAbrirViajero.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrirViajero.setText("Abrir Archivo...");
        menuAbrirViajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirViajeroActionPerformed(evt);
            }
        });
        menuArchivo.add(menuAbrirViajero);

        menuAbrirMochila.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrirMochila.setText("Abrir Mochila...");
        menuAbrirMochila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirMochilaActionPerformed(evt);
            }
        });
        menuArchivo.add(menuAbrirMochila);

        menuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(menuSalir);

        barraMenu.add(menuArchivo);

        menuEdicion.setText("Edicion");

        menuEjecutar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_MASK));
        menuEjecutar.setText("ejecutar");
        menuEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEjecutarActionPerformed(evt);
            }
        });
        menuEdicion.add(menuEjecutar);

        menuPreferencias.setText("Preferencias...");
        menuPreferencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPreferenciasActionPerformed(evt);
            }
        });
        menuEdicion.add(menuPreferencias);

        barraMenu.add(menuEdicion);

        setJMenuBar(barraMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAbrirViajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirViajeroActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new TSPFilter());
        fileChooser.showOpenDialog(this);
        if ((archivo = fileChooser.getSelectedFile()) == null) {
            return;
        }
        try {
            viajero = HandlerViajero.cargar(archivo);
            dibujarNodos();

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar el archivo:" + ex.getMessage(),
                    "Error en carga",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuAbrirViajeroActionPerformed

    private void dibujarNodos() {

        //TODO: implementar zoom
        Widget nodo;
        for (Punto punto : viajero.getPuntos()) {
            nodo = grafoViajero.addNode(punto);
            nodo.setPreferredLocation(viajero.trasladar(punto, panelViajero.getBounds()));
        }

        panelViajero.add(grafoViajero.createView(), java.awt.BorderLayout.CENTER);
    }

    private void dibujarSolucion() {

        SolucionViajero solucionViajero = (SolucionViajero) algoritmo.getSolucion();
        Punto anterior = solucionViajero.getRuta().get(0);
        Arco arco;
        for (Punto punto : solucionViajero.getRuta()) {
            arco = new Arco(anterior.getCostoA(punto));
            grafoViajero.addEdge(arco);
            grafoViajero.setEdgeSource(arco, anterior);
            grafoViajero.setEdgeTarget(arco, punto);
            anterior = punto;
        }
        arco = new Arco(anterior.getCostoA(solucionViajero.getRuta().get(0)));
        grafoViajero.addEdge(arco);
        grafoViajero.setEdgeSource(arco, anterior);
        grafoViajero.setEdgeTarget(arco, solucionViajero.getRuta().get(0));
    }

    public void cambioSolucionActual(Solucion solucion) {
        /*try {
            //registro.write(NumberFormat.getInstance().format(solucion.getCosto()) + "\n");
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }*/
    }

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuAbrirMochilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirMochilaActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        if ((archivo = fileChooser.getSelectedFile()) == null) {
            return;
        }
        try {
            mochila = HandlerMochila.cargar(archivo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar el archivo:" + ex.getMessage(),
                    "Error en carga",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuAbrirMochilaActionPerformed

    private void menuEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEjecutarActionPerformed
        esquemaVecindad = configuracion.crearEsquemaVecindad(viajero);
        try {
            registro = new FileWriter(File.createTempFile("tsp", ".tmp"));
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        algoritmo = new SimulatedAnnealing(esquemaVecindad);
        algoritmo.setOyente(this);
        algoritmo.setTipoProblema(SimulatedAnnealing.MINIMIZACION);
        algoritmo.setEsquemaReduccion(configuracion.getEsquemaReduccion());
        algoritmo.setIteracionesDiferenteTemperatura(configuracion.getIteracionesDiferenteTemperatura());
        algoritmo.setIteracionesMismaTemperatura(configuracion.getIteracionesMismaTemperatura());
        algoritmo.setTemperatura(configuracion.getTemperaturaInicial());
        algoritmo.ejecutar(viajero.getSolucionAleatoria());

        try {
            registro.flush();
            registro.close();
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }

        dibujarSolucion();
        System.out.println("Mejor Solucion" + algoritmo.getSolucion());
    }//GEN-LAST:event_menuEjecutarActionPerformed

    private void botonAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirArchivoActionPerformed
        menuAbrirViajeroActionPerformed(evt);
    }//GEN-LAST:event_botonAbrirArchivoActionPerformed

    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        menuEjecutarActionPerformed(evt);
    }//GEN-LAST:event_botonEjecutarActionPerformed

    private void menuPreferenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPreferenciasActionPerformed
        ConfiguracionUI panelConfiguracion = new ConfiguracionUI();
        JDialog dialog = new JDialog();
        dialog.setContentPane(panelConfiguracion);
        dialog.setTitle("Configuración");
        dialog.setModal(true);
        dialog.setModalExclusionType(ModalExclusionType.APPLICATION_EXCLUDE);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
        configuracion = panelConfiguracion.getConfiguracion();
    }//GEN-LAST:event_menuPreferenciasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            // Set cross-platform Java L&F (also called "Metal")
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());
        } catch (Exception exc) {
        }

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    Main frame = new Main();
                    frame.setVisible(true);
                    frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar barraHerramientas;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton botonAbrirArchivo;
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JMenuItem menuAbrirMochila;
    private javax.swing.JMenuItem menuAbrirViajero;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuEdicion;
    private javax.swing.JMenuItem menuEjecutar;
    private javax.swing.JMenuItem menuPreferencias;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JPanel panelViajero;
    private javax.swing.JScrollPane scrollPanelViajero;
    // End of variables declaration//GEN-END:variables
}
